{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","containers/Auth/Auth.module.css","containers/Auth/Auth.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_Input_module_css__WEBPACK_IMPORTED_MODULE_1__","_Input_module_css__WEBPACK_IMPORTED_MODULE_1___default","Input","props","validationError","inputClasses","style","InputElement","invalid","shouldValidate","touched","push","Invalid","a","createElement","className","ValidationError","elementConfig","placeholder","inputElement","elementType","Object","assign","join","value","onChange","changed","options","map","option","key","displayValue","Label","label","module","exports","Auth","state","controls","email","type","validation","required","minLength","valid","isEmail","password","isSignUp","inputChangeHandler","event","controlName","updatedControls","_Users_TonyWible_Dropbox_CloudMash_Class_Rutgers_Projects_React_Burger_Redux_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","_this","_Users_TonyWible_Dropbox_CloudMash_Class_Rutgers_Projects_React_Burger_Redux_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","validationCheck","setState","submitHandler","preventDefault","onAuth","swithAuthMode","previousState","this","buildingBurger","redirectPath","prop","onSetRedirectPath","_this2","formElements","id","config","form","element","react__WEBPACK_IMPORTED_MODULE_7___default","_components_UI_Input_Input_js__WEBPACK_IMPORTED_MODULE_11__","loading","_components_UI_Spinner_Spinner__WEBPACK_IMPORTED_MODULE_10__","errorMessage","error","message","redirectNow","isAuthenticated","react_router_dom__WEBPACK_IMPORTED_MODULE_8__","to","onSubmit","_components_UI_Button_Button__WEBPACK_IMPORTED_MODULE_9__","btnType","clicked","Component","connect","auth","token","burgerBuilder","building","authRedirectPath","dispatch","actions","path"],"mappings":"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","file":"static/js/3.0fe03e1f.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./Input.module.css\";\n\nconst Input = (props) =>{\n    \n    let validationError = null;\n    const inputClasses = [style.InputElement];\n    // ShouldValidate Needed So We Don't Try To Validate Dropdown Box\n    if(props.invalid && props.shouldValidate && props.touched){\n        inputClasses.push(style.Invalid);\n        validationError = <p className={style.ValidationError}>{props.elementConfig.placeholder} Error: Please Enter A Valid Value</p>\n    }\n\n    let inputElement = null;\n    switch(props.elementType){\n        case(\"input\"):\n            inputElement = <input \n                className={inputClasses.join(\" \")} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed}/>;\n            break; \n        case(\"textarea\"):\n            inputElement = <textarea\n                className={inputClasses.join(\" \")} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed}/>;\n            break;\n        case(\"select\"):\n            inputElement = (\n                <select\n                    className={inputClasses.join(\" \")} \n                    value={props.value}\n                    onChange={props.changed}\n                >\n                    {props.elementConfig.options.map(option =>(\n                        <option value={option.value} key={option.value}>\n                            {option.displayValue}\n                        </option>\n                    ))}\n                </select>\n            );\n            break;    \n        default:\n            inputElement = <input \n                className={inputClasses.join(\" \")} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed}/>\n    }\n    \n    return(\n        <div className={style.Input}>\n            <label className={style.Label}>{props.label}</label>\n            {inputElement}\n            {validationError}\n        </div>\n    );\n}\n\nexport default Input; ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__CkPMQ\",\"Label\":\"Input_Label__OEszu\",\"InputElement\":\"Input_InputElement__2Q_MM\",\"Invalid\":\"Input_Invalid__1Xw6D\",\"ValidationError\":\"Input_ValidationError__2H7jo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2KfTp\"};","import React, {Component} from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport Button from \"../../components/UI/Button/Button\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\nimport Input from \"../../components/UI/Input/Input.js\";\nimport style from \"./Auth.module.css\";\nimport * as actions from \"../../store/actions/index\";\nimport {connect} from \"react-redux\";\nimport {validationCheck} from \"../../constants/utilities\";\n\nclass Auth extends Component{\n\n    state = {\n        controls: {\n            email: {\n                value: \"\",\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"email\",\n                    placeholder: \"Enter Email Address\"   \n                },\n                validation: {\n                    required: true,\n                    minLength: 3,\n                    valid: false,\n                    isEmail: true\n                },\n                touched: false\n            },\n            password: {\n                value: \"\",\n                elementType: \"input\",\n                elementConfig: {\n                    type: \"password\",\n                    placeholder: \"Enter Password\"   \n                },\n                validation: {\n                    required: true,\n                    minLength: 6,\n                    valid: false\n                },\n                touched: false\n            }\n\n        },\n        isSignUp: true\n    }\n\n    componentDidMount(){\n        // catches edge case of if user is redirected to checkout but is not yet building a burger\n        if(!this.props.buildingBurger && this.props.redirectPath !== \"/\"){  \n            this.prop.onSetRedirectPath(\"/\");\n        }\n    }\n\n    inputChangeHandler = (event, controlName) =>{\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                touched: true,\n                validation: {\n                    ...this.state.controls[controlName].validation,\n                    valid: validationCheck(event.target.value, this.state.controls[controlName].validation)\n                } \n            }\n        }\n        this.setState({\n            controls: updatedControls\n        }) \n    }\n\n    submitHandler = (event) =>{\n        event.preventDefault();\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignUp)\n    }\n\n    swithAuthMode = () =>{\n        this.setState((previousState)=>{\n            return {isSignUp: !previousState.isSignUp}\n        })\n    }\n\n    render(){\n\n        let formElements = [];\n        for(let key in this.state.controls){\n            formElements.push({\n                id: key,\n                config: this.state.controls[key]\n            })\n        };\n\n        let form = formElements.map( element => (\n            <Input \n                key={element.id} \n                elementType={element.config.elementType} \n                elementConfig={element.config.elementConfig} \n                value={element.config.value}\n                invalid={!element.config.validation.valid}\n                shouldValidate={element.config.validation.required}\n                touched={element.config.touched}\n                changed={(event)=>this.inputChangeHandler(event, element.id)}\n            />\n           \n        ))\n\n        if(this.props.loading){\n            form = <Spinner/>\n        }\n\n        let errorMessage = null;\n        if(this.props.error){\n            errorMessage = (\n                // Note: Firebase's Error Obj has a Message Property\n                <p>{this.props.error.message}</p>\n            );\n        }\n\n        let redirectNow = null;\n        // \n        if(this.props.isAuthenticated){\n            // console.log(this.props.authRedirectPath);\n            redirectNow = <Redirect to={this.props.redirectPath}/>\n        }\n\n        return(\n            <div className={style.Auth}>\n                {redirectNow}\n                {this.state.isSignUp ? <h2>Sign Up</h2> : <h2>Login</h2>}\n                {errorMessage}\n                <form onSubmit={this.submitHandler}>\n                    {form}\n                    <Button btnType=\"Success\" >Submit</Button>\n                </form>\n                <Button\n                    clicked={this.swithAuthMode} \n                    btnType=\"Danger\"\n                >\n                    {this.state.isSignUp ? \"Switch To Login\" : \"Switch To Sign Up\"}\n                </Button>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        loading: state.auth.loading,\n        error: state.auth.error,\n        isAuthenticated: state.auth.token != null,\n        buildingBurger: state.burgerBuilder.building,\n        redirectPath: state.auth.authRedirectPath\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        onAuth: (email, password, isSignUp)=>dispatch(actions.auth(email, password, isSignUp)),\n        onSetRedirectPath: (path)=>dispatch(actions.setAuthRedirectPath(path))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);"],"sourceRoot":""}