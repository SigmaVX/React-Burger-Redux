{"version":3,"sources":["components/Order/Order.module.css","components/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","item","push","name","amount","ingredientList","map","react_default","a","createElement","key","style","textTransform","display","margin","padding","lineHeight","border","borderRadius","fontSize","width","height","backgroundColor","className","id","price","toFixed","Orders","this","onFetchOrders","token","userId","orders","Spinner","loading","length","textAlign","paddingTop","minHeight","order","components_Order_Order","orderPrice","Component","connect","state","purchased","error","auth","dispatch","actions","errorHandler","axios"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,MAAA,wIC0CHA,EAxCD,SAACC,GACX,IAAMC,EAAc,GACpB,IAAI,IAAIC,KAAQF,EAAMC,YAClBA,EAAYE,KAAK,CACbC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAIlC,IAAMI,EAAiBL,EAAYM,IAAI,SAAAL,GACnC,OAAOM,EAAAC,EAAAC,cAAA,QACKC,IAAKT,EAAKE,KACVQ,MAAO,CACHC,cAAe,aACfC,QAAS,eACTC,OAAQ,QACRC,QAAS,MACTC,WAAY,OACZC,OAAQ,iBACRC,aAAc,MACdC,SAAU,OACVC,MAAO,OACPC,OAAQ,OACRC,gBAAiB,YAGpBrB,EAAKE,KAhBX,KAgBmBF,EAAKG,OAhBxB,OAoBX,OACIG,EAAAC,EAAAC,cAAA,OAAKc,UAAWZ,IAAMb,OAClBS,EAAAC,EAAAC,cAAA,0BAAkBV,EAAMyB,IACxBjB,EAAAC,EAAAC,cAAA,SAAIJ,GACJE,EAAAC,EAAAC,cAAA,0BAAkBV,EAAM0B,MAAMC,QAAQ,8CC5B5CC,8LAIAC,KAAK7B,MAAM8B,cAAcD,KAAK7B,MAAM+B,MAAOF,KAAK7B,MAAMgC,yCAKpD,IAAIC,EAASzB,EAAAC,EAAAC,cAACwB,EAAA,EAAD,MA+Bb,OA9BKL,KAAK7B,MAAMmC,SAAWN,KAAK7B,MAAMiC,OAAOG,OAAS,IAClDH,EACIzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACyB,UAAW,SAAUC,WAAY,OAAQC,UAAW,UAAhE,iBAGAV,KAAK7B,MAAMiC,OAAO1B,IAAI,SAAAiC,GAAK,OACvBhC,EAAAC,EAAAC,cAAC+B,EAAD,CACI9B,IAAK6B,EAAMf,GACXxB,YAAauC,EAAMvC,YAEnByB,OAAQc,EAAME,WACdjB,GAAIe,EAAMf,SAOE,IAA7BI,KAAK7B,MAAMiC,OAAOG,SACjBH,EACIzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,MAAO,CAACyB,UAAW,SAAUC,WAAY,OAAQC,UAAW,UAAhE,iBACkB/B,EAAAC,EAAAC,cAAA,WADlB,oCAQLuB,SAxCMU,aA6DNC,sBAjBS,SAACC,GACrB,MAAM,CACFZ,OAAQY,EAAML,MAAMP,OACpBE,QAASU,EAAML,MAAML,QACrBW,UAAWD,EAAML,MAAMM,UACvBC,MAAOF,EAAML,MAAMO,MACnBhB,MAAOc,EAAMG,KAAKjB,MAClBC,OAAQa,EAAMG,KAAKhB,SAIA,SAACiB,GACxB,MAAM,CACFnB,cAAe,SAACC,EAAOC,GAAR,OAAiBiB,EAASC,IAAoBnB,EAAOC,OAI7DY,CAA6CO,YAAavB,EAAQwB","file":"static/js/2.f1ca8476.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__RK18J\"};","import React from \"react\";\nimport style from \"./Order.module.css\";\n\nconst Order = (props) =>{\n    const ingredients = [];\n    for(let item in props.ingredients){\n        ingredients.push({\n            name: item, \n            amount: props.ingredients[item]\n        })\n    }\n\n    const ingredientList = ingredients.map(item => {\n        return <span \n                    key={item.name}\n                    style={{\n                        textTransform: \"capitalize\",\n                        display: \"inline-block\",\n                        margin: \"0 8px\",\n                        padding: \"5px\",\n                        lineHeight: \"70px\",\n                        border: \"1px solid #ccc\",\n                        borderRadius: \"50%\",\n                        fontSize: \"14px\",\n                        width: \"75px\",\n                        height: \"75px\",\n                        backgroundColor: \"#45a4c6\"\n                    }}\n                > \n                    {item.name} ({item.amount})\n                </span>\n    });\n\n    return(\n        <div className={style.Order}>\n            <p>Order Number: {props.id}</p>        \n            <p>{ingredientList}</p>\n            <p>Order Price: ${props.price.toFixed(2)}</p>\n        </div>\n\n    );\n}\n\nexport default Order;","import React, {Component} from \"react\";\nimport Order from \"../../components/Order/Order\";\nimport axios from \"../../API/Axios/Axios-Orders\";\nimport errorHandler from \"../HOC/ErrorHandler/ErrorHandler\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\n\n\nclass Orders extends Component{\n\n    componentDidMount(){\n        // console.log(this.props.userId);\n      this.props.onFetchOrders(this.props.token, this.props.userId);\n    }\n\n    render(){\n\n        let orders = <Spinner />;\n        if (!this.props.loading && this.props.orders.length > 0){\n            orders = (\n                <div>\n                    <h1 style={{textAlign: \"center\", paddingTop: \"30px\", minHeight: \"100vh\"}}>Order History</h1>\n                    {\n                        \n                    this.props.orders.map(order =>(\n                        <Order \n                            key={order.id}\n                            ingredients={order.ingredients}\n                            // Add + To Convert String to Number Type\n                            price={+order.orderPrice}\n                            id={order.id}\n                        />\n                    ))}\n                </div>\n            )\n        }\n\n        if(this.props.orders.length === 0 ){\n            orders = (\n                <div>\n                    <h1 style={{textAlign: \"center\", paddingTop: \"30px\", minHeight: \"100vh\"}}>\n                        No Orders Yet <br/>\n                        Head To The Home Page To Start\n                    </h1>\n                </div>\n            )\n        }\n\n        return orders;\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        orders: state.order.orders,\n        loading: state.order.loading,\n        purchased: state.order.purchased,\n        error: state.order.error,\n        token: state.auth.token,\n        userId: state.auth.userId\n    }\n}\n\nconst mapDispatchToProps = (dispatch) =>{\n    return{\n        onFetchOrders: (token, userId)=>dispatch(actions.fetchOrders(token, userId))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(errorHandler(Orders, axios));"],"sourceRoot":""}